{

  // Standard browser globals.
  // e.g. 'document', 'navigator' and 'FileReader'
  "browser": true,

  // Define non-standard but widely adopted globals.
  // e.g. 'escape' and 'unescape'
  "nonstandard": true,

  // Extra globals
  "globals": {
    "jQuery":  true,
    "$": true
  },

  // Prohibit globals for development: 'alert', 'confirm' and 'console'
  "devel":  false,

  // Prohibit 'debugger'
  "debug":   false,

  // This will disallow the use of various ES5 features(e.g. get/set) and enable 
  // various error messages(e.g. extra comma, radix and reserved words) that
  // apply only to older ES3 environments(IE8 and below)
  // @see
  // 	 http://jslinterrors.com/option-jshint-es3
  "es3":   true,

  // Do not force to use strict mode
  "strict":  false,

  // Prohibit use ES6 syntax(e.g. 'const' and 'let')
  "esnext":  false,

  // Prohibit use of == and != in favor of === and !==
  "eqeqeq":  true,

  // Tolerate using '== null' comparisons
  "eqnull":  true,

  // Tolerate expressions like 'a && a()' or 'a ? a() : b()'
  "expr":   true,

  // Prohibit 'var a = function() { ... }();'
  // Recommendation: 'var a = (function() { ... })();' 
  "immed":  true,

  // Do not use arguments.caller and arguments.callee
  "noarg":  true,

  // Prohibit undeclared variables
  "undef": true,

  // This option warns when you define and never use your variables
  "unused": true,

  // Prohibit code like 'if (a = 10) {}'
  "boss": false,

  // Prohibit using '__proto__' property
  "proto": false,

  // This option requires you to always put curly braces around blocks in 
  // loops and conditionals.
  // Bad: 
  //   if(condition) doSomething();
  // Good:
  //   if (condition) {
  //     doSomething();
  //   }
  "curly": true,

  // Prohibit to call constructor functions without assigning its result 
  // to any variable: 'new MyConstructor();'
  "nonew": true,

  // Prohibit using [] notation when it can be expressed in dot notation.
  // e.g. person['name'] vs. person.name.
  "sub": false,

  // Allows functions inside of loops
  "loopfunc": true,

  // Allows correct multi-line strings, it still warns about multi-line
  // strings without escape characters or with anything in between the
  // escape character and a whitespace.
  "multistr": true
}
